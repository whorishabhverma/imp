BUBBLE SORT
Practice Link: https://practice.geeksforgeeks.org/problems/bubble-sort/1
void bubbleSort(int arr[], int n)
    {
        // Your code here 
        for(int i=0;i<n;i++){
            for(int j=0;j<n-1;j++){
                if(arr[j]>arr[j+1]){
                    int temp=arr[j];
                    arr[j]=arr[j+1];
                    arr[j+1]=temp;
                }
            }
        }
    }
    
    
    
SELECTION SORT
https://practice.geeksforgeeks.org/problems/selection-sort/1
void selectionSort(int arr[], int n)
    {
       //code here
    int k;
    for(int i=0;i<n-1;i++)
    {
        int min=INT_MAX;
        for(int j=i;j<n;j++){
            if(min>arr[j])
            {
                min=arr[j];
                k=j;
            }
        }
        swap(arr[i],arr[k]);
    }
    }
    
    
    INSERTION SORT
    
    void insertionSort(int arr[], int n)
    {
       // Write your code here.
    for(int i=1;i<n;i++){
       int j=i-1;
        int temp=arr[i];
        while(j>=0){
            if(arr[j]>temp){
                arr[j+1]=arr[j];
            }
            else{
                break;
            }
            j--;
        }
        
        arr[j+1]=temp;
    }
    }
    
    
    Merge sort
    
    
    https://www.codingninjas.com/codestudio/problems/merge-sort_920442?utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_Arrayproblems&leftPanelTab=1
    void merge(vector<int>&arr,int low,int mid,int high){


    vector<int> temp;
    int left=low;
    int right=mid+1;
    while(left <=mid && right <=high)
{
    if(arr[left]<arr[right])
    {
        temp.push_back(arr[left]);
        left++;
    }
    else{
        temp.push_back(arr[right]);
        right++;
    }
}

while(left<=mid){
    temp.push_back(arr[left]);
        left++;

}

while(right <= high)
{
     temp.push_back(arr[right]);
        right++;

}

for(int i=low;i<=high;i++){
    arr[i]=temp[i-low];
}


}
void mS(vector<int> &arr ,int low ,int high){
    if(low == high) return;
    int mid=(low+high)/2;
    mS(arr,low,mid);
    mS(arr,mid+1,high);
    merge(arr,low,mid,high);
}
void mergeSort(vector < int > & arr, int n) {
    // Write your code here.
    mS(arr,0,n-1);

}
    



